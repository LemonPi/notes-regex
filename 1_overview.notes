-----------------------------------------------------------
    Overview
-----------------------------------------------------------
- regex engine always returns the leftmost match
	- even if a "better" match could be made later on
- different implementations of a regex engine are called "flavours"
- 2 types of engines
	1. regex directed
		- walks through regex to try to match next token
		- if token fails to match, backtrack to previous position in regex and string to try a different path
	2. text directed
		- walks through string and try all permutations of regex before moving on to next string
		- never backtrack
		- cannot have lazy quantifiers and backreferences

-----------------------------------------------------------
    Character Classes
-----------------------------------------------------------
- aka character set
- set of characters to match inside [ ]
- always matches only a single character
- can specify ranges
	- [0-9] matches a digit
	- can specify multiple ranges
		- [0-9a-fA-F] matches a single hex digit
- [^ ...] negates character class
	- also matches invisible line break characters
	- use negative lookahead to match the absence of a character
- usual metacharacters are not metacharacters inside character classes
	- unnecessary to \ escape them
		- would still work, but decreases readability
	- only metacharacters are
		- closing bracket ]
			- literal if right after [ or right after ^
				- doesn't work in Javascript
		- backslash \
		- caret ^
			- only special if at the front of the character class
		- hyphen -
			- literal if right after [ or right before ] or right after ^
	- POSIX and GNU flavours treat \ as literal character
		- can't escape anything in character classes
- repeat character classes repeats entire class rather than matched character
	eg. [0-9]+ matches 837 as well as 222
	- use backreferences to repeat matched character
		eg. ([0-9])\1+