-----------------------------------------------------------
    Overview
-----------------------------------------------------------
- 0 length assertions
	- assertions because they return only whether they matched or not
	- do not consume characters

-----------------------------------------------------------
    Lookahead
-----------------------------------------------------------
- match something (not)followed by something
- (?!regex) to match the absence of regex
- (?=regex) to match something followed by regex
- can use any regex inside lookahead
	- but not in lookbehind
eg. q(?!u) matches q not followed by u
- can have capturing groups inside and can be used in backreference
	- (?=(regex)) order of parentheses
		- ((?=regex)) won't work because lookahead will have discarded the match by group capture store time
- another reminder that lookaround doesn't consume any characters!
	eg. q(?=u)i matched against quit
		1. q matches q
		2. u in lookahead matches with u
		3. lookahead is successful but the match is discarded and the engine doesn't advance from u to i in the text
		4. regex advances to i but the text is at u so the match fails
		5. all remaining attempts fail due to lack of q in text

-----------------------------------------------------------
    Lookbehind
-----------------------------------------------------------
- (?<!regex) negative
- (?<=regex) positive
- can use anywhere in regex, not just start
	eg. \w+(?<!s)\b matches word not ending in s
		- not equivalent to \w+[^s]\b
			- doesn't match single letter words
			- last character can be non \w
		- equivalent to \w*[^s\W]\b
- if placed in front of a literal, is evaluated at each step instead of literal
	eg. (?<=a)b match against thingamabob
		- for each character, step back 1 and test against a
			- not testing each character against b, then for all of those that match look at 1 before
		- don't put very expensive regex in these
- limited to fixed length strings in lookbehind
	- can't apply regex backwards so needs to figure out how many characteres to step back

-----------------------------------------------------------
    Use as filter
-----------------------------------------------------------
- the fact lookaround doesn't consume it's match makes it suitable as a filter
	eg. (?=\b\w{6}\b)\b\w*cat\w* matches any 6 character word containing cat
	- much easier to express complex conditions
	- after match, still at beginning of string fulfilling condition
	- can optomize to (?=\b\w{6}\b)\b\w{0,3}cat\w*